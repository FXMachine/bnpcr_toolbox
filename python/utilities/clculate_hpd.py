# Autogenerated with SMOP version 
# /usr/local/bin/smop calculate_hpd.m -o ../../python/utilities/clculate_hpd.py

from __future__ import division
try:
    from runtime import *
except ImportError:
    from smop.runtime import *

def calculate_hpd_(samples=None,conf=None,*args,**kwargs):
    varargin = cellarray(args)
    nargin = 2-[samples,conf].count(None)+len(args)

    num_hpd_samples=floor_(length_(samples) * conf)
    samples=sort_(samples,char('descend'))
    u_hpd=samples[1]
    l_hpd=samples[num_hpd_samples]
    sample_ind=1
    for u in samples.reshape(-1):
        samples_below_u=samples < u
        if sum_(samples_below_u) < num_hpd_samples:
            break
        else:
            u_hpd_tmp=copy_(u)
            l_hpd_tmp=samples[sample_ind + num_hpd_samples - 1]
            if u_hpd_tmp - l_hpd_tmp < u_hpd - l_hpd:
                u_hpd=copy_(u_hpd_tmp)
                l_hpd=copy_(l_hpd_tmp)
        sample_ind=sample_ind + 1
    return u_hpd,l_hpd
