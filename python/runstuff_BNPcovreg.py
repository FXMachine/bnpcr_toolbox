# Autogenerated with SMOP version 
# /usr/local/bin/smop runstuff_BNPcovreg.m -o ../python/runstuff_BNPcovreg.py

from __future__ import division
try:
    from runtime import *
except ImportError:
    from smop.runtime import *

load(char('simData'))
p,N=size(y,nargout=2)
inds_y=ones(size(y))
inds_y=inds_y > 0
x=[arange_(1,N)] / N
c=10
d=1
r=1e-05
K=zeros(N)
for ii in arange_(1,N).reshape(-1):
    for jj in arange_(1,N).reshape(-1):
        dist_ii_jj=_abs(x(ii) - x(jj))
        K[ii,jj]=d * exp(- c * (dist_ii_jj ** 2))
K=K + diag(r * ones(1,N))
invK=inv(K)
logdetK=2 * _sum(log(diag(chol(K))))
prior_params.K.c_prior=1
prior_params.K.invK=invK
prior_params.K.K=K
prior_params.K.logdetK=logdetK
prior_params.sig.a_sig=1
prior_params.sig.b_sig=0.1
prior_params.hypers.a_phi=1.5
prior_params.hypers.b_phi=1.5
prior_params.hypers.a1=2
prior_params.hypers.a2=2
settings.L=5
settings.k=4
settings.Niter=10000
settings.saveEvery=100
settings.storeEvery=10
settings.saveMin=1
settings.saveDir=char('test')
settings.trial=1
settings.sample_K_flag=3
settings.latent_mean=1
settings.inds_y=inds_y
restart=0
if restart:
    settings.lastIter=10000
BNP_covreg_varinds(y,prior_params,settings,restart,true_params)
c=10
d=1
r=1e-05
c_vec=copy_(c)
Nc=length(c_vec)
invK=zeros(N,N,Nc)
K=zeros(N,N,Nc)
logdetK=zeros(1,Nc)
for kk in arange_(1,Nc).reshape(-1):
    K_tmp=zeros(N,N)
    for ii in arange_(1,N).reshape(-1):
        for jj in arange_(1,N).reshape(-1):
            dist_ii_jj=_abs(x(ii) - x(jj))
            K_tmp[ii,jj]=d * exp(- c_vec(kk) * (dist_ii_jj ** 2))
    K_tmp=K_tmp + diag(r * ones(1,N))
    K[arange_(),arange_(),kk]=K_tmp
    invK[arange_(),arange_(),kk]=inv(K_tmp)
    logdetK[kk]=2 * _sum(log(diag(chol(K_tmp))))
prior_params.K.c_prior=ones(1,Nc) / Nc
prior_params.K.invK=invK
prior_params.K.K=K
prior_params.K.logdetK=logdetK
settings.sample_K_flag=1
settings.sample_K_flag=2
